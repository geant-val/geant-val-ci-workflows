name: configure-build-run
on: 
  workflow_dispatch:
    inputs:
      repository:
        description: 'The repository to checkout'
        required: false
        type: string
  workflow_call:
    inputs:
      repository:
        description: 'The repository to checkout'
        required: false
        type: string

jobs:

  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          repository: ${{ inputs.repository || github.repository }}
      - id: set-matrix
        run: |
          PROJECT_DIRS=$(ls -d */ | sed 's/\///g')  # Assuming each directory is a project
          MATRIX=()

          for DIR in $PROJECT_DIRS; do
            MATRIX+=("{\"project_dir\":\"$DIR\", \"geant4_version\":\"11.1.p02\", \"platform\":\"centos7\", \"gcc_version\":\"10\"}")
            MATRIX+=("{\"project_dir\":\"$DIR\", \"geant4_version\":\"10.7.p03\", \"platform\":\"centos7\", \"gcc_version\":\"10\"}")
            MATRIX+=("{\"project_dir\":\"$DIR\", \"geant4_version\":\"11.1.ref10\", \"platform\":\"centos8\", \"gcc_version\":\"10\"}")
          done

          # Convert array to JSON string
          MATRIX_JSON="["
          for i in "${!MATRIX[@]}"; do
            MATRIX_JSON+="${MATRIX[$i]}"
            if [ $((i+1)) -lt ${#MATRIX[@]} ]; then
              MATRIX_JSON+=","
            fi
          done
          MATRIX_JSON+="]"

          # Print the matrix
          echo "Matrix JSON: $MATRIX_JSON"

          # Set the output for GitHub Actions
          echo "MATRIX_JSON<<EOF" >> $GITHUB_ENV
          echo "$MATRIX_JSON" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

  build-and-test:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false  # This prevents other jobs from being canceled if one fails
      matrix:
        include:
          - geant4_version: "11.1.p02"
            platform: "centos7" 
            gcc_version: "10" 
          - geant4_version: "10.7.p03"
            platform: "centos7"
            gcc_version: "10"
          - geant4_version: "11.1.ref10"
            platform: "centos8"
            gcc_version: "10"
       
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          repository: ${{ inputs.repository || github.repository }}
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - name: Use Matrix JSON
        run: |
          echo "Matrix JSON: {{ env.MATRIX_JSON }}"
      - name: Start container
        run: |
          CONTAINER_NAME=my-container-${{ github.run_id }}-${{ github.run_number }}
          docker run -id --name $CONTAINER_NAME \
            --volume "${{ github.workspace }}:/workspace" \
            --volume /cvmfs:/cvmfs:shared \
            --workdir /workspace \
            ghcr.io/aidasoft/${{ matrix.platform }}:latest /bin/bash
          echo "CONTAINER_NAME=$CONTAINER_NAME" >> $GITHUB_ENV
      - name: Connect to container and configure G4 app
        run: |
          docker exec $CONTAINER_NAME /bin/bash -c "set -o pipefail; \
          export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.26.2/Linux-x86_64/bin/:${PATH} && \
          source /cvmfs/geant4.cern.ch/geant4/${{ matrix.geant4_version }}/x86_64-${{ matrix.platform }}-gcc${{ matrix.gcc_version }}-optdeb/bin/geant4.sh && \
          source /cvmfs/sft.cern.ch/lcg/contrib/gcc/${{ matrix.gcc_version }}/x86_64-${{ matrix.platform }}/setup.sh && \
          mkdir -p build logs install && cd build && cmake -DCMAKE_INSTALL_PREFIX=../install ../ 2>&1 | \
          tee /workspace/logs/stderr-configure-${{ matrix.geant4_version }}.log"
      - name: Connect to container and build G4 app
        run: |
          docker exec $CONTAINER_NAME /bin/bash -c "set -o pipefail; \
          export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.26.2/Linux-x86_64/bin/:${PATH} && \
          source /cvmfs/geant4.cern.ch/geant4/${{ matrix.geant4_version }}/x86_64-${{ matrix.platform }}-gcc${{ matrix.gcc_version }}-optdeb/bin/geant4.sh && \
          source /cvmfs/sft.cern.ch/lcg/contrib/gcc/${{ matrix.gcc_version }}/x86_64-${{ matrix.platform }}/setup.sh && \
          cd build && make install 2>&1 | \
          tee /workspace/logs/stderr-build-${{ matrix.geant4_version }}.log"      
      - name: Upload failure log
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: logfiles-${{ matrix.geant4_version }}.log
          path: logs/*.log




    
